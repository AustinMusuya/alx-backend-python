pipeline {
    agent any

    environment {
        PYTHON = 'python3'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/AustinMusuya/alx-backend-python.git',
                    credentialsId: 'github-creds'
            }
        }

        stage('Setup Python Env') {
            steps {
                // ShiningPanda virtualenv
                withPythonEnv('/tmp/venv') {
                    sh '''
                        python3 -m venv venv
                        source venv/bin/activate
                        pip3 install --upgrade pip
                        pip3 install -r messaging_app/requirements.txt
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    source venv/bin/activate
                    pytest messaging_app/tests --junitxml=report.xml
                '''
            }
        }

        stage('Publish Report') {
            steps {
                junit 'report.xml'
            }
        }
    }
}

pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')
        DOCKERHUB_REPO = "your-dockerhub-username/messaging_app"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/your-username/alx-backend-python.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('messaging_app') {
                    script {
                        sh "docker build -t ${DOCKERHUB_REPO}:latest ."
                    }
                }
            }
        }

        stage('Login to DockerHub') {
            steps {
                script {
                    sh "echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${DOCKERHUB_CREDENTIALS_USR} --password-stdin"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    sh "docker push ${DOCKERHUB_REPO}:latest"
                }
            }
        }
    }

    post {
        success {
            echo "Docker image built and pushed successfully!"
        }
        failure {
            echo "Build failed. Check logs."
        }
    }
}
